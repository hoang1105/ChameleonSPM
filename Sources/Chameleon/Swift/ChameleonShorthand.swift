import UIKit

// MARK: - UIColor Methods Shorthand

/**
Creates and returns a complementary flat color object 180 degrees away in the HSB colorspace from the specified color.

- parameter color: The color whose complementary color is being requested.

- returns: A flat UIColor object in the HSB colorspace.
*/
public func ComplementaryFlatColorOf(_ color: UIColor) -> UIColor {
    return UIColor.colorWithComplementaryFlatColorOf(color)
}

/**
 Returns a randomly generated flat color object with an alpha value of 1.0 in either a light or dark shade.
 
 - parameter shade: Specifies whether the randomly generated flat color should be a light or dark shade.
 
 - returns: A flat UIColor object in the HSB colorspace.
 */
public func RandomFlatColorWithShade(_ shade: UIShadeStyle) -> UIColor {
    return UIColor.colorWithRandomFlatColorOfShadeStyle(shade)
}

/**
 Creates and returns either a black or white color object depending on which contrasts more with a specified color.
 
 - parameter backgroundColor: The specified color of the contrast color that is being requested.
 - parameter returnFlat:      Pass **true** to return flat color objects.
 
 - returns: A UIColor object in the HSB colorspace.
 */
public func ContrastColorOf(_ backgroundColor: UIColor, returnFlat: Bool) -> UIColor {
    return UIColor.colorWithContrastingBlackOrWhiteColorOn(backgroundColor, isFlat: returnFlat)
}

/**
 Creates and returns a gradient as a color object with an alpha value of 1.0
 
 - parameter gradientStyle: Specifies the style and direction of the gradual blend between colors.
 - parameter frame:         The frame rectangle, which describes the view’s location and size in its superview’s coordinate system.
 - parameter colors:        An array of color objects used to create a gradient.
 
 - returns: A UIColor object using colorWithPattern.
 */
public func GradientColor(_ gradientStyle: UIGradientStyle, frame: CGRect, colors: [UIColor]) -> UIColor {
    return UIColor.colorWithGradientStyle(gradientStyle, withFrame: frame, andColors: colors)
}

public func HexColor(_ hexString: String, _ alpha: CGFloat = 1.0) -> UIColor? {
    return UIColor.colorWithHexString(hexString, withAlpha: alpha)
}

/**
 Returns the average color generated by averaging the colors of a specified image.
 
 - parameter image: A specified UIImage.
 
 - returns: A flat UIColor object in the HSB colorspace.
 */
public func AverageColorFromImage(_ image: UIImage) -> UIColor {
    return UIColor.colorWithAverageColorFromImage(image)
}

// MARK: - Array Methods Shorthand

/**
Generates and creates an array of 5 color objects in the HSB colorspace from the specified color.

- parameter colorSchemeType: The color scheme with which to select colors using a specified color.
- parameter color:           The specified color which the color scheme is built around.
- parameter isFlatScheme:    Pass *true* to return flat color objects.

- returns: An array of 5 color objects in the HSB colorspace.
*/
public func ColorSchemeOf(_ colorSchemeType:ColorScheme, color:UIColor, isFlatScheme:Bool) -> [UIColor] {
    return NSArray.arrayOfColorsWithColorScheme(colorSchemeType, usingColor: color, withFlatScheme: isFlatScheme) as! [UIColor]
}

/**
Generates and creates an array of 5 color objects in the HSB colorspace that appear most often in a specified image.

- parameter image:          The specified image which the color scheme is built around.
- parameter withFlatScheme: Pass **true** to return flat color objects.

- returns: An array of 5 color objects in the HSB colorspace.
*/
public func ColorsFromImage(_ image: UIImage, withFlatScheme: Bool) -> [UIColor] {
    return NSArray.arrayOfColorsFromImage(image, withFlatScheme: withFlatScheme) as! [UIColor]
}


// MARK: - Special Colors Shorthand

/**
Returns a randomly generated flat color object whose alpha value is 1.0.

- returns: A flat UIColor object in the HSB colorspace.
*/
public func RandomFlatColor() -> UIColor {
    return UIColor.randomFlatColor()
}

public func ClearColor() -> UIColor {
    return UIColor.clear
}


// MARK: - Light Shades Shorthand

public func FlatBlack() -> UIColor {
    return UIColor.flatBlackColor()
}

public func FlatBlue() -> UIColor {
    return UIColor.flatBlueColor()
}

public func FlatBrown() -> UIColor {
    return UIColor.flatBrownColor()
}

public func FlatCoffee() -> UIColor {
    return UIColor.flatCoffeeColor()
}

public func FlatForestGreen() -> UIColor {
    return UIColor.flatForestGreenColor()
}

public func FlatGray() -> UIColor {
    return UIColor.flatGrayColor()
}

public func FlatGreen() -> UIColor {
    return UIColor.flatGreenColor()
}

public func FlatLime() -> UIColor {
    return UIColor.flatLimeColor()
}

public func FlatMagenta() -> UIColor {
    return UIColor.flatMagentaColor()
}

public func FlatMaroon() -> UIColor {
    return UIColor.flatMaroonColor()
}

public func FlatMint() -> UIColor {
    return UIColor.flatMintColor()
}

public func FlatNavyBlue() -> UIColor {
    return UIColor.flatNavyBlueColor()
}

public func FlatOrange() -> UIColor {
    return UIColor.flatOrangeColor()
}

public func FlatPink() -> UIColor {
    return UIColor.flatPinkColor()
}

public func FlatPlum() -> UIColor {
    return UIColor.flatPlumColor()
}

public func FlatPowderBlue() -> UIColor {
    return UIColor.flatPowderBlueColor()
}

public func FlatPurple() -> UIColor {
    return UIColor.flatPurpleColor()
}

public func FlatRed() -> UIColor {
    return UIColor.flatRedColor()
}

public func FlatSand() -> UIColor {
    return UIColor.flatSandColor()
}

public func FlatSkyBlue() -> UIColor {
    return UIColor.flatSkyBlueColor()
}

public func FlatTeal() -> UIColor {
    return UIColor.flatTealColor()
}

public func FlatWatermelon() -> UIColor {
    return UIColor.flatWatermelonColor()
}

public func FlatWhite() -> UIColor {
    return UIColor.flatWhiteColor()
}

public func FlatYellow() -> UIColor {
    return UIColor.flatYellowColor()
}

// MARK: - Chameleon - Dark Shades Shorthand

public func FlatBlackDark() -> UIColor {
    return UIColor.flatBlackDarkColor()
}

public func FlatBlueDark() -> UIColor {
    return UIColor.flatBlueDarkColor()
}

public func FlatBrownDark() -> UIColor {
    return UIColor.flatBrownDarkColor()
}

public func FlatCoffeeDark() -> UIColor {
    return UIColor.flatCoffeeDarkColor()
}

public func FlatForestGreenDark() -> UIColor {
    return UIColor.flatForestGreenDarkColor()
}

public func FlatGrayDark() -> UIColor {
    return UIColor.flatGrayDarkColor()
}

public func FlatGreenDark() -> UIColor {
    return UIColor.flatGreenDarkColor()
}

public func FlatLimeDark() -> UIColor {
    return UIColor.flatLimeDarkColor()
}

public func FlatMagentaDark() -> UIColor {
    return UIColor.flatMagentaDarkColor()
}

public func FlatMaroonDark() -> UIColor {
    return UIColor.flatMaroonDarkColor()
}

public func FlatMintDark() -> UIColor {
    return UIColor.flatMintDarkColor()
}

public func FlatNavyBlueDark() -> UIColor {
    return UIColor.flatNavyBlueDarkColor()
}

public func FlatOrangeDark() -> UIColor {
    return UIColor.flatOrangeDarkColor()
}

public func FlatPinkDark() -> UIColor {
    return UIColor.flatPinkDarkColor()
}

public func FlatPlumDark() -> UIColor {
    return UIColor.flatPlumDarkColor()
}

public func FlatPowderBlueDark() -> UIColor {
    return UIColor.flatPowderBlueDarkColor()
}

public func FlatPurpleDark() -> UIColor {
    return UIColor.flatPurpleDarkColor()
}

public func FlatRedDark() -> UIColor {
    return UIColor.flatRedDarkColor()
}

public func FlatSandDark() -> UIColor {
    return UIColor.flatSandDarkColor()
}

public func FlatSkyBlueDark() -> UIColor {
    return UIColor.flatSkyBlueDarkColor()
}

public func FlatTealDark() -> UIColor {
    return UIColor.flatTealDarkColor()
}

public func FlatWatermelonDark() -> UIColor {
    return UIColor.flatWatermelonDarkColor()
}

public func FlatWhiteDark() -> UIColor {
    return UIColor.flatWhiteDarkColor()
}

public func FlatYellowDark() -> UIColor {
    return UIColor.flatYellowDarkColor()
}